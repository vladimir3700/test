{"version":3,"sources":["login_form/FormErrors.js","login_form/login_form.js","navigation/nav.js","homepage/home.js","post_page/post_page.js","App.js","reportWebVitals.js","index.js"],"names":["FormErrors","formErrors","className","Object","keys","map","fieldName","i","length","Login","props","handleUserInput","e","name","target","value","setState","validateField","state","email","password","error","emailValid","passwordValid","formValid","fieldValidationErrors","this","match","validateForm","Form","onSubmit","Group","controlId","errorClass","Label","Control","type","placeholder","onChange","Text","Button","variant","Component","Nav","to","Home","items","isLoaded","fetch","then","res","json","item","id","body","Post_page","a","method","JSON","stringify","title","userId","headers","response","console","log","onClick","postData","UpdateData","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5641a51a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const FormErrors = ({formErrors}) =>\r\n  <div className='formErrors'>\r\n    {Object.keys(formErrors).map((fieldName, i) => {\r\n      if(formErrors[fieldName].length > 0){\r\n        return (\r\n          <p key={i}>{fieldName} {formErrors[fieldName]}</p>\r\n        )        \r\n      } else {\r\n        return '';\r\n      }\r\n    })}\r\n    </div>","//import React from 'react';\r\nimport React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {Component} from 'react';\r\nimport { FormErrors } from './FormErrors';\r\nimport store from 'store';\r\n\r\nimport \"./login_form.css\";\r\n\r\nclass Login extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      formErrors: {email: '', password: ''},\r\n      error: false,\r\n      emailValid: false,\r\n      passwordValid: false,\r\n      formValid: false\r\n    }\r\n     \r\n\r\n  }\r\n\r\n  //onSubmit(e) {\r\n    //e.preventDefault();\r\n\r\n    //const { email, password } = this.state;\r\n    //const { history } = this.props;\r\n    //this.setState({ error: false });\r\n\r\n    //if (!(email === 'george@gmail.com' && password === 'foreman')) {\r\n      //return this.setState({ error: true });\r\n    //}\r\n    //store.set('loggedIn', true);\r\n    //history.push('/home');\r\n\r\n    //console.log(\"you're logged in. yay!\");\r\n    //store.set('loggedIn', true);\r\n  //}\r\n\r\n\r\n\r\n  handleUserInput = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({[name]: value},\r\n                  () => { this.validateField(name, value) });\r\n  }\r\n\r\n  validateField(fieldName, value) {\r\n    let fieldValidationErrors = this.state.formErrors;\r\n    let emailValid = this.state.emailValid;\r\n    let passwordValid = this.state.passwordValid;\r\n\r\n    switch(fieldName) {\r\n      case 'email':\r\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n        fieldValidationErrors.email = emailValid ? '' : ' is not corrected';\r\n        break;\r\n      case 'password':\r\n        passwordValid = value.length >= 6;\r\n        fieldValidationErrors.password = passwordValid ? '': ' is too short';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({formErrors: fieldValidationErrors,\r\n                    emailValid: emailValid,\r\n                    passwordValid: passwordValid\r\n                  }, this.validateForm);\r\n  }\r\n\r\n  validateForm() {\r\n    this.setState({formValid: this.state.emailValid && this.state.passwordValid});\r\n  }\r\n\r\n  errorClass(error) {\r\n    return(error.length === 0 ? '' : 'has-error');\r\n  }\r\n\r\n  render () {\r\n    return (\r\n \r\n<Form className = \"Form\" onSubmit={this.onSubmit}>\r\n\r\n        <h2>Login</h2>\r\n        <div className=\"panel panel-default\">\r\n          <FormErrors formErrors={this.state.formErrors} />\r\n        </div>\r\n    <Form.Group controlId=\"formBasicEmail\" className = {`form-group ${this.errorClass(this.state.formErrors.email)}`}>\r\n           <Form.Label>Email address</Form.Label>\r\n           <Form.Control type=\"email\" placeholder=\"For example: email@gmail.com\" name = \"email\"\r\n           value={this.state.email}\r\n           onChange={this.handleUserInput}\r\n           />\r\n           <Form.Text className=\"text-muted\">\r\n           We'll never share your email with anyone else.\r\n           </Form.Text>\r\n    </Form.Group>\r\n\r\n   \r\n    <Form.Group controlId=\"formBasicPassword\" className = {`form-group ${this.errorClass(this.state.formErrors.password)}`}>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Minimum 6 symbols\" name=\"password\"\r\n           value={this.state.password}\r\n           onChange={this.handleUserInput}\r\n          />\r\n          </Form.Group>\r\n         <Button variant=\"primary\" type=\"submit\">\r\n          Log in\r\n        </Button>\r\n    </Form>\r\n )\r\n}\r\n}\r\n\r\nexport default Login;\r\n","import React,{Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class Nav extends Component{\r\n    render(){\r\n        return(\r\n            \r\n    <nav className = \"navbar navbar-expand navbar-light fixed-top\">\r\n    <div className = \"container\">\r\n    <Link className=\"navbar-brand\" to={'/home'}>Home</Link>\r\n    <div className=\"collapse navbar-collapse\">\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link to={'/login'} className=\"nav-link\">Login</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to={'/post_request'} className=\"nav-link\">Post</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  </nav>\r\n        )\r\n}\r\n}","import React, {Component} from 'react';\r\nimport \"./home.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nexport default class Home extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            items:[],\r\n            isLoaded: false,\r\n        }\r\n    }\r\n    componentDidMount(){\r\n     fetch('https://jsonplaceholder.typicode.com/posts?_start=0&_limit=9')\r\n     .then(res => res.json())\r\n     .then(json =>{\r\n      this.setState({\r\n          isLoaded: true,\r\n          items: json,\r\n          \r\n      })\r\n     });\r\n    }\r\n render() {\r\n\r\n     var {isLoaded, items} = this.state;\r\n     if (!isLoaded){\r\n         return <div>Loading...</div>\r\n     }\r\n\r\n     else  {\r\n     return (\r\n         <Form>\r\n         <div className=\"Api\">\r\n            <h2>Result Get posts</h2>\r\n             <ul>              \r\n                     {items.map(item => (\r\n                        \r\n                      <li key={item.id}>\r\n                          \r\n                         ID: {item.id}  | Body: {item.body}\r\n                          \r\n                      </li>\r\n                        \r\n                     ))};\r\n             </ul>\r\n\r\n            \r\n         </div>\r\n         </Form>\r\n         \r\n     );\r\n     }\r\n }\r\n}","import React, {Component} from 'react';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport './post_page.css';\r\n\r\nexport default class Post_page extends Component{\r\n    async postData(){\r\n        try {\r\n          let result = await fetch('https://jsonplaceholder.typicode.com/posts', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n              title: 'request',\r\n              body: 'post',\r\n              userId: 1,\r\n            }),\r\n            headers: {\r\n              'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n          })\r\n            .then((response) => response.json())\r\n            .then((json) => console.log(json));\r\n        \r\n    } catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n    \r\n    async UpdateData(){\r\n        try {\r\n          let result = await fetch('https://jsonplaceholder.typicode.com/posts/1', {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n              id: 1,\r\n              title: 'post',\r\n              body: 'request',\r\n              userId: 1,\r\n            }),\r\n            headers: {\r\n              'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n          })\r\n            .then((response) => response.json())\r\n            .then((json) => console.log(json));\r\n        \r\n    } catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <section className='Post_Data'>\r\n            <h2> Post_page </h2>\r\n            <h2> Result In Console </h2>\r\n            <button onClick={() => this.postData()}>Press to post</button>\r\n            <button onClick={() => this.UpdateData()}>Update post</button>\r\n            </section>\r\n            \r\n           \r\n        );\r\n\r\n    }\r\n\r\n}","\nimport './App.css';\nimport Login from './login_form/login_form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Component } from 'react';\nimport React from 'react';\nimport Nav from './navigation/nav';\nimport Home from './homepage/home';\nimport Post_page from './post_page/post_page';\nimport {BrowserRouter,Switch,Route} from 'react-router-dom';\n\nclass App extends Component {\n\n  \n  \n  render(){\n  return (\n    <>\n    <BrowserRouter>\n    <div className=\"App\">\n      <Nav/>\n      \n\n      <div className=\"auth-wrapper\">\n        <div className=\"auth-inner\">\n          <Switch>\n             <Route exact path=\"/home\" component={Home} />\n             <Route exact path=\"/login\" component={Login}/>\n             <Route exact path=\"/post_request\" component={Post_page}/>\n          </Switch>\n          </div>\n          \n      </div>\n\n    </div>\n    </BrowserRouter>\n  \n\n    </>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}